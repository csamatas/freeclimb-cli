/* WARNING: This file is automatically generated. Please edit the files in the /generation/commands directory. */
import { Command, flags } from "@oclif/command"
import { Output } from "../../output"
import { FreeClimbApi, FreeClimbResponse } from "../../freeclimb"
import * as Errors from "../../errors"

export class applicationsDelete extends Command {
    static description = ` Delete the specified application. If this application's ID is assigned to any Incoming phone number, that relationship will be cleared.
If successful, FreeClimb will return an HTTP 204 response with no body.`

    static flags = {
        next: flags.boolean({ hidden: true }),
        help: flags.help(),
    }

    static args = [
        {
            name: "applicationId",
            description: "String that uniquely identifies this application resource.",
            required: true,
        },
    ]

    async run() {
        const out = new Output(this)
        const { args, flags } = (() => {
            try {
                return this.parse(applicationsDelete)
            } catch (error) {
                const err = new Errors.ParseError(error)
                this.error(err.message, { exit: err.code })
            }
        })()
        const fcApi = new FreeClimbApi(`Applications/${args.applicationId}`, true, this)
        const normalResponse = (response: FreeClimbResponse) => {
            const resp =
                response.status === 204
                    ? "Received a success code from FreeClimb. There is no further output."
                    : JSON.stringify(response.data, null, 2)
            out.out(resp)
        }
        if (flags.next) {
            const error = new Errors.NoNextPage()
            this.error(error.message, { exit: error.code })
        }

        await fcApi.apiCall("DELETE", {}, normalResponse)
    }
}
